
// Filter: drop-shadow
// -------------------


// @private `drop-shadow` filter function
// -----------------------------------------------------------------------------
// @param [number]: $offset-x
// @param [number]: $offset-y
// @param [number]: $blur-radius
// @param [color]: $color
// @param [number]: $spread-radius (not implemented yet)
// -----------------------------------------------------------------------------
// @dependencies `_svg-filter`, `_ie-filter`
// -----------------------------------------------------------------------------
// @return [map]

@function _fn-drop-shadow(
  $offset-x,
  $offset-y,
  $blur-radius,
  $color,
  $spread-radius: null
) {
  // CSS filter function
  $css: drop-shadow($offset-x $offset-y $blur-radius $color);

  // SVG filter equivalent
  $svg: _svg-filter(
            drop-shadow,
            $offset-x: ($offset-x / 1px),
            $offset-y: ($offset-y / 1px),
            $blur-radius: ($blur-radius / 1px),
            $color: $color
          );

  // IE static filter
  // Glow(Color, Strength)
  // Shadow(color, Direction, Strength)
  $ie: _ie-filter(dropshadow, $OffX: $offset-x, $OffY: $offset-y, $Color: $color);

  @return (
    css: $css,
    svg: $svg,
     ie: $ie
  );
}


// @public `drop-shadow` filter mixin
// -----------------------------------------------------------------------------
// @spec drop-shadow() = drop-shadow( <length>{2,3} <color>? )
// -----------------------------------------------------------------------------
// @param [number]: $offset-x
// @param [number]: $offset-y
// @param [number]: $blur-radius
// @param [color]: $color
// -----------------------------------------------------------------------------
// @print [css]

@mixin drop-shadow(
  $offset-x: 0px,
  $offset-y: $offset-x,
  $blur-radius: 0px,
  $color: rgba(0, 0, 0, .5)
) {
  @include filters((drop-shadow:
                      ($offset-x, $offset-y, $blur-radius, $color)
                  ));
}
